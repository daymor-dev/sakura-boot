[versions]
# GRADLE PLUGIN VERSION
antora = "1.0.0"
classpath-collision-detector = "1.0.0"
cyclonedx-gradle-plugin = "1.8.2"
dependency-analysis-gradle-plugin = "1.32.0"
jvm-dependency-conflict-resolution = "2.1.1"
node = "7.1.0"
spotless-plugin-gradle = "6.25.0"

# DEPENDENCY VERSION
assertj-core = "3.26.3"
byte-buddy-agent = "1.14.18"
evo-inflector = "1.3"
jsr305 = "3.0.2"
mapstruct = "1.6.3"
spring-boot = "3.3.1"
springdoc-openapi-starter = "2.8.12"
swagger = "2.2.22"

[libraries]
# GRADLE PLUGIN
antora = { module = "org.antora:gradle-antora-plugin", version.ref = "antora" }
classpath-collision-detector = { module = "io.fuchs.gradle.classpath-collision-detector:classpath-collision-detector", version.ref = "classpath-collision-detector" }
cyclonedx-gradle-plugin = { module = "org.cyclonedx:cyclonedx-gradle-plugin", version.ref = "cyclonedx-gradle-plugin" }
dependency-analysis-gradle-plugin = { module = "com.autonomousapps:dependency-analysis-gradle-plugin", version.ref = "dependency-analysis-gradle-plugin" }
jvm-dependency-conflict-resolution = { module = "org.gradlex:jvm-dependency-conflict-resolution", version.ref = "jvm-dependency-conflict-resolution" }
node = { module = "com.github.node-gradle:gradle-node-plugin", version.ref = "node" }
spotless-plugin-gradle = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless-plugin-gradle" }
spring-boot-gradle-plugin = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot" }

# DEPENDENCY
aspectjweaver = { module = "org.aspectj:aspectjweaver" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj-core" }
byte-buddy-agent = { module = "net.bytebuddy:byte-buddy-agent", version.ref = "byte-buddy-agent" }
cache-api = { module = "javax.cache:cache-api" }
commons-lang3 = { module = "org.apache.commons:commons-lang3" }
ehcache = { module = "org.ehcache:ehcache" }
evo-inflector = { module = "org.atteo:evo-inflector", version.ref = "evo-inflector" }
hamcrest = { module = "org.hamcrest:hamcrest" }
hibernate-core = { module = "org.hibernate.orm:hibernate-core" }
hibernate-jcache = { module = "org.hibernate.orm:hibernate-jcache" }
hibernate-jpamodelgen = { module = "org.hibernate.orm:hibernate-jpamodelgen" }
hibernate-validator = { module = "org.hibernate.validator:hibernate-validator" }
h2 = { module = "com.h2database:h2" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }
jackson-datatype-hibernate5-jakarta = { module = "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api" }
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api" }
jsonassert = { module = "org.skyscreamer:jsonassert" }
json-path = { module = "com.jayway.jsonpath:json-path" }
rest-assured-json-path = { module = "io.rest-assured:json-path" }
jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "jsr305" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params" }
logback-classic = { module = "ch.qos.logback:logback-classic" }
logback-core = { module = "ch.qos.logback:logback-core" }
lombok = { module = "org.projectlombok:lombok" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
mockito-core = { module = "org.mockito:mockito-core" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter" }
postgresql = { module = "org.postgresql:postgresql" }
rest-assured = { module = "io.rest-assured:rest-assured" }
slf4j-api = { module = "org.slf4j:slf4j-api" }
slf4j-simple = { module = "org.slf4j:slf4j-simple" }
springdoc-openapi-starter-common = { module = "org.springdoc:springdoc-openapi-starter-common", version.ref = "springdoc-openapi-starter" }
springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi-starter" }
spring-beans = { module = "org.springframework:spring-beans" }
spring-boot = { module = "org.springframework.boot:spring-boot" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-test" }
spring-boot-test-autoconfigure = { module = "org.springframework.boot:spring-boot-test-autoconfigure" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
spring-context = { module = "org.springframework:spring-context" }
spring-context-support = { module = "org.springframework:spring-context-support" }
spring-core = { module = "org.springframework:spring-core" }
spring-data-commons = { module = "org.springframework.data:spring-data-commons" }
spring-data-jpa = { module = "org.springframework.data:spring-data-jpa" }
spring-expression = { module = "org.springframework:spring-expression" }
spring-hateoas = { module = "org.springframework.hateoas:spring-hateoas" }
spring-jcl = { module = "org.springframework:spring-jcl" }
spring-test = { module = "org.springframework:spring-test" }
spring-tx = { module = "org.springframework:spring-tx" }
spring-web = { module = "org.springframework:spring-web" }
spring-webmvc = { module = "org.springframework:spring-webmvc" }
swagger-annotations-jakarta = { module = "io.swagger.core.v3:swagger-annotations-jakarta", version.ref = "swagger" }
swagger-core-jakarta = { module = "io.swagger.core.v3:swagger-core-jakarta", version.ref = "swagger" }
swagger-models-jakarta = { module = "io.swagger.core.v3:swagger-models-jakarta", version.ref = "swagger" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }

[plugins]
base-dependency-rules = { id = "dev.daymor.gradle.base.dependency-rules" }
base-identity = { id = "dev.daymor.gradle.base.identity" }
base-lifecycle = { id = "dev.daymor.gradle.base.lifecycle" }
base-lifecycle-root = { id = "dev.daymor.gradle.base.lifecycle.root" }

check-dependencies = { id = "dev.daymor.gradle.check.dependencies" }
check-dependencies-root = { id = "dev.daymor.gradle.check.dependencies.root" }
check-format-gradle = { id = "dev.daymor.gradle.check.format-gradle" }
check-format-gradle-root = { id = "dev.daymor.gradle.check.format-gradle.root" }
check-format-java = { id = "dev.daymor.gradle.check.format-java" }

component-application = { id = "dev.daymor.gradle.component.application" }
component-framework = { id = "dev.daymor.gradle.component.framework" }
component-starter = { id = "dev.daymor.gradle.component.starter" }

dependency-lombok = { id = "dev.daymor.gradle.dependency.lombok" }
dependency-lombok-test = { id = "dev.daymor.gradle.dependency.lombok-test" }
dependency-spring-boot-development = { id = "dev.daymor.gradle.dependency.spring-boot-development" }

feature-antora = { id = "dev.daymor.gradle.feature.antora" }
feature-antora-ui = { id = "dev.daymor.gradle.feature.antora-ui" }
feature-compile-java = { id = "dev.daymor.gradle.feature.compile-java" }
feature-javadoc = { id = "dev.daymor.gradle.feature.javadoc" }
feature-publish = { id = "dev.daymor.gradle.feature.publish" }
feature-publish-java = { id = "dev.daymor.gradle.feature.publish-java" }
feature-spring-boot = { id = "dev.daymor.gradle.feature.spring-boot" }
feature-use-all-catalog-versions = { id = "dev.daymor.gradle.feature.use-all-catalog-versions" }

report-code-coverage = { id = "dev.daymor.gradle.report.code-coverage" }
report-plugin-analysis = { id = "dev.daymor.gradle.report.plugin-analysis" }
report-sbom = { id = "dev.daymor.gradle.report.sbom" }
report-test = { id = "dev.daymor.gradle.report.test" }

test-all-test = { id = "dev.daymor.gradle.test.all-test" }
test-end-to-end-test = { id = "dev.daymor.gradle.test.end-to-end-test" }
test-functional-test = { id = "dev.daymor.gradle.test.functional-test" }
test-integration-test = { id = "dev.daymor.gradle.test.integration-test" }
test-performance-test = { id = "dev.daymor.gradle.test.performance-test" }
test-test = { id = "dev.daymor.gradle.test.test" }
test-test-fixtures = { id = "dev.daymor.gradle.test.test-fixtures" }
